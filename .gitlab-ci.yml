stages: # List of stages for jobs, and their order of execution
  - prepare          
  - build
  - test
  - quality_gate
  - tag
  - deploy

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - .npm/
    - node_modules/

build:
  image: node:alpine
  stage: build
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - "dist/"
  before_script:
    - npm ci --cache .npm
    - npm run lint
  script:
    - npm run build

sonarcloud-check:
  stage: quality_gate
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master

prepare:release:tag:
  image: node:latest
  stage: prepare
  script: 
    - TAG=$(node -p "require('./package.json').version")
    - echo $TAG
    - echo 'VERSION=$TAG' > prepare_tag.env
    - cat prepare_tag.env 
  artifacts:
    reports:
      dotenv: prepare_tag.env     

release:tag:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: tag
  needs:
    - job: prepare:release:tag
      artifacts: true
    - job: build
  script:
    - echo 'running release:tag FOR ${VERSION}'
  release:
    tag_name: ${VERSION}
    ref: ${CI_COMMIT_SHORT_SHA}
    description: 'Readme.md'


publish:package:gitlab:
  image: node:12
  stage: deploy
  before_script:
    - npm --version
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >.npmrc
    - cat .npmrc
  script:
    - npm publish --verbose --access public
  only:
    - tags
